# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  coupons: coupons.yml
  commons: commons.yml

service:
  display-name: Coupons Service
  auth: true
  base-path: ""
  endpoints:
    create:
      path: /coupons
      method: POST
      docs: Create a new coupon
      display-name: Create a new coupon
      request: CouponInput
      response: Coupon
      errors:
        - commons.BadRequestError
        - commons.UnauthorizedError
        - commons.UnprocessableEntityError
      examples: 
        - request: $CouponInput.Example0
          response: 
            body: $Coupon.Example0

    get:
      path: /coupons/{code}
      method: GET
      docs: Return a single coupon
      display-name: Find coupon by code
      path-parameters:
        code:
          docs: Code of the existing coupon
          type: string
      response: Coupon
      errors: 
        - commons.UnauthorizedError
        - commons.NotFoundError
      examples: 
        - path-parameters:
            code: b7ab2926-1de8-4428-9bcd-779314ac129b
          response: 
            body: $Coupon.Example0

    update:
      path: /coupons/{code}
      method: PUT
      docs: Update an existing coupon by code
      display-name: Update an existing coupon
      path-parameters:
        code:
          docs: Code of the existing coupon
          type: string
      request:
        body: CouponInput
      response: Coupon
      errors: 
        - commons.UnauthorizedError
        - commons.NotFoundError
      examples: 
        - path-parameters:
            code: b7ab2926-1de8-4428-9bcd-779314ac129b
          request: $CouponInput.Example0
          response: 
            body: $Coupon.Example0

    destroy:
      path: /coupons/{code}
      method: DELETE
      docs: Delete a coupon
      display-name: Delete a coupon
      path-parameters:
        code:
          docs: Code of the existing coupon
          type: string
      response: Coupon
      errors: 
        - commons.UnauthorizedError
        - commons.NotFoundError
      examples: 
        - path-parameters:
            code: b7ab2926-1de8-4428-9bcd-779314ac129b
          response: 
            body: $Coupon.Example0

    getAll:
      path: /coupons
      method: GET
      docs: Find all coupons in certain organisation
      display-name: Find Coupons
      request:
        name: FindAllCouponsRequest
        query-parameters:
          page:
            docs: Number of pages
            type: optional<integer>
          per_page:
            docs: Number of records per page
            type: optional<integer>
      response: Coupons
      errors: 
        - commons.UnauthorizedError
        - commons.NotFoundError
      examples: 
        - query-parameters:
            page: 10
            per_page: 20
          response: 
            body: $Coupons.Example0

    apply:
      path: /applied_coupons
      method: POST
      docs: Apply a coupon to a customer
      display-name: Apply a coupon to a customer
      request: AppliedCouponInput
      response: AppliedCoupon
      errors: 
        - commons.UnauthorizedError
        - commons.NotFoundError
      examples:
        - request: $AppliedCouponInput.Example0
          response: 
            body: $AppliedCoupon.Example0

    getAllAppliedCoupons:
      path: /applied_coupons
      method: GET
      docs: Find all applied coupons
      display-name: Find Applied Coupons
      request:
        name: FindAllAppliedCouponsInput
        query-parameters:
          page:
            docs: Number of page
            type: optional<integer>
          per_page:
            docs: Number of records per page
            type: optional<integer>
          status:
            docs: Applied coupon status
            type: optional<CouponStatus>
          external_customer_id:
            docs: External customer ID
            type: optional<string>
      response: AppliedCoupons
      errors:
        - commons.UnauthorizedError
      examples: 
        - query-parameters:
            page: 3
            per_page: 2
            status: active
          response: 
            body: $AppliedCoupons.Example0

types:
  Coupons:
    properties:
      coupons: optional<list<CouponObject>>
    examples:
      - name: Example0 
        value:
          coupons:
            -  $CouponObject.Example0

  AppliedCouponInput:
    properties:
      applied_coupon: optional<AppliedCouponInputObject>
    examples:
      - name: Example0 
        value: 
          applied_coupon: $AppliedCouponInputObject.Example0

  AppliedCouponInputObject:
    properties:
      external_customer_id: optional<string>
      coupon_code: optional<string>
      frequency: optional<FrequencyType>
      frequency_duration: optional<integer>
      amount_cents: optional<integer>
      amount_currency: optional<string>
      percentage_rate: optional<double>
    examples:
      - name: Example0 
        value: 
          external_customer_id: cust_12345
          coupon_code: my-coupon
          frequency: recurring
          frequency_duration: 5
          amount_cents: 4000
          amount_currency: USD
          percentage_rate: 10.0

  AppliedCoupon:
    properties:
      applied_coupon: optional<AppliedCouponObject>
    examples:
      - name: Example0
        value: 
          applied_coupon: $AppliedCouponObject.Example0

  AppliedCoupons:
    properties:
      applied_coupons: optional<list<AppliedCouponObject>>
    examples: 
      - name: Example0 
        value: 
          applied_coupons: 
            - $AppliedCouponObject.Example0

  CouponStatus:
    enum:
      - active
      - terminated

  CouponInput:
    properties:
      coupon: optional<CouponInputObject>
    examples:
      - name: Example0 
        value: 
          coupon: $CouponInputObject.Example0

  CouponType:
    enum:
      - fixed_amount
      - percentage

  FrequencyType:
    enum:
      - once
      - recurring

  ExpirationType:
    enum:
      - no_expiration
      - time_limit

  CouponInputObject:
    properties:
      name: optional<string>
      code: optional<string>
      coupon_type: optional<CouponType>
      amount_cents: optional<integer>
      amount_currency: optional<string>
      reusable: optional<boolean>
      percentage_rate: optional<double>
      frequency: optional<FrequencyType>
      frequency_duration: optional<integer>
      expiration_at: optional<string>
      expiration: optional<ExpirationType>
      applies_to: optional<PlanCodes>
    examples:
      - name: Example0 
        value: 
          name: coupon_name
          code: coupon_code
          amount_cents: 5000
          amount_currency: USD
          expiration: time_limit
          expiration_at: '2022-08-08T23:59:59Z'
          coupon_type: fixed_amount
          reusable: true
          frequency: recurring
          frequency_duration: 3
          applies_to:
            plan_codes:
              - code1

  Coupon:
    properties:
      coupon: optional<CouponObject>
    examples: 
      - name: Example0
        value: 
          coupon: $CouponObject.Example0
  
  CouponObject:
    properties:
      lago_id: optional<string>
      name: optional<string>
      code: optional<string>
      coupon_type: optional<CouponType>
      amount_cents: optional<integer>
      amount_currency: optional<string>
      percentage_rate: optional<double>
      limited_plans: optional<boolean>
      plan_codes: optional<list<string>>
      reusable: optional<boolean>
      created_at: optional<string>
      frequency: optional<FrequencyType>
      frequency_duration: optional<integer>
      expiration_at: optional<string>
      expiration: optional<ExpirationType>
    examples: 
      - name: Example0
        value: 
          lago_id: b7ab2926-1de8-4428-9bcd-779314ac129b
          name: coupon_name
          code: coupon_code
          amount_cents: 5000
          amount_currency: USD
          percentage_rate: null
          coupon_type: fixed_amount
          reusable: true
          limited_plans: true
          plan_codes:
            - code1
          frequency: recurring
          frequency_duration: 3
          expiration: time_limit
          expiration_at: '2022-08-08T23:59:59Z'
          created_at: '2022-04-29T08:59:51Z'

  AppliedCouponObject:
    properties:
      lago_id: optional<string>
      lago_coupon_id: optional<string>
      coupon_code: optional<string>
      lago_customer_id: optional<string>
      external_customer_id: optional<string>
      status: optional<CouponStatus>
      amount_cents: optional<integer>
      amount_cents_remaining: optional<integer>
      amount_currency: optional<string>
      percentage_rate: optional<double>
      frequency: optional<FrequencyType>
      frequency_duration: optional<integer>
      frequency_duration_remaining: optional<integer>
      expiration_at: optional<string>
      created_at: optional<string>
      terminated_at: optional<string>
    examples:
      - name: Example0 
        value: 
          lago_id: b7ab2926-1de8-4428-9bcd-779314ac129b
          lago_coupon_id: 5f45c5a2-4fc1-423f-aee0-0441081b6d8b
          coupon_code: my-coupon
          lago_customer_id: 900e863f-f450-4ec4-9112-4688e6ea7934
          external_customer_id: cust_12345
          status: active
          amount_cents: 9000
          amount_cents_remaining: 1000
          amount_currency: USD
          percentage_rate: 25.5
          frequency: once
          expiration_at: '2022-08-08T23:59:59Z'
          created_at: '2022-04-29T08:59:51Z'

  PlanCodes: 
    type: optional<map<string, list<string>>>
    docs: Settings with coupon limitations      